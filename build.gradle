plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.project'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter'
    // Spring Web (for Spring MVC)
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Spring Data MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JWT Support
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // for Jackson support JSON serialization/deserialization

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Emailing service
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:5.5.0'

    // JUnit 5 for unit testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    // Spring Boot Starter Test for integration with Spring
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // google cloud storage
    implementation("com.google.cloud:google-cloud-storage:2.23.0")
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    options.release = 21
}
